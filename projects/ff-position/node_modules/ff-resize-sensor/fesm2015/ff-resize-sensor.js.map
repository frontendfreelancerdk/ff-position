{"version":3,"file":"ff-resize-sensor.js.map","sources":["ng://ff-resize-sensor/lib/resize-event.ts","ng://ff-resize-sensor/lib/ff-resize-sensor.service.ts","ng://ff-resize-sensor/lib/ff-resize-sensor.directive.ts","ng://ff-resize-sensor/lib/ff-resize-sensor.module.ts"],"sourcesContent":["export class FFResizeSensorEvent {\n  constructor(\n    readonly el: HTMLElement,\n    readonly oldWidth: number,\n    readonly oldHeight: number,\n    readonly width: number,\n    readonly height: number\n  ) {\n  }\n}\n","import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {ResizeSensor} from 'css-element-queries';\nimport {FFResizeSensorEvent} from './resize-event';\nimport {isPlatformBrowser} from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FFResizeSensorService {\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n  subscribe(el, callback) {\n    if (!el || typeof callback !== 'function') {\n      return;\n    }\n    if (isPlatformBrowser(this.platformId)) {\n      let {width, height} = el.getBoundingClientRect();\n      width = Math.round(width);\n      height = Math.round(height);\n      new ResizeSensor(el, (s) => {\n        const event = new FFResizeSensorEvent(\n          el,\n          width,\n          height,\n          s.width,\n          s.height\n        );\n        callback(event);\n        width = s.width;\n        height = s.height;\n      });\n      callback(new FFResizeSensorEvent(el, width, height, width, height));\n    }\n  }\n}\n","import {AfterViewInit, Directive, ElementRef, EventEmitter, Inject, Output, PLATFORM_ID} from '@angular/core';\nimport {FFResizeSensorService} from './ff-resize-sensor.service';\nimport {FFResizeSensorEvent} from './resize-event';\n\n@Directive({\n  selector: '[ffResizeSensor]',\n  exportAs: 'ffResizeSensor'\n})\nexport class FFResizeSensorDirective implements AfterViewInit {\n  public width: number;\n  public height: number;\n  public oldWidth: number;\n  public oldHeight: number;\n  @Output()\n  readonly resize = new EventEmitter<FFResizeSensorEvent>();\n\n  constructor(public el: ElementRef, private service: FFResizeSensorService, @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n  ngAfterViewInit(): void {\n    this.service.subscribe(this.el.nativeElement, event => {\n      this.onResize(event);\n    });\n  }\n\n  private onResize(event) {\n    this.oldWidth = event.oldWidth;\n    this.oldHeight = event.oldHeight;\n    this.width = event.width;\n    this.height = event.height;\n    this.resize.emit(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FFResizeSensorDirective} from './ff-resize-sensor.directive';\n\n@NgModule({\n  declarations: [FFResizeSensorDirective],\n  imports: [],\n  exports: [FFResizeSensorDirective]\n})\nexport class FFResizeSensorModule {\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAa,mBAAmB;;;;;;;;IAC9B,YACW,EAAe,EACf,QAAgB,EAChB,SAAiB,EACjB,KAAa,EACb,MAAc;QAJd,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAQ;QACb,WAAM,GAAN,MAAM,CAAQ;KAExB;CACF;;;;;;ACTD,MAQa,qBAAqB;;;;IAChC,YAAyC,UAAe;QAAf,eAAU,GAAV,UAAU,CAAK;KACvD;;;;;;IAED,SAAS,CAAC,EAAE,EAAE,QAAQ;QACpB,IAAI,CAAC,EAAE,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YACzC,OAAO;SACR;QACD,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAClC,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,EAAE,CAAC,qBAAqB,EAAE;YAChD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,YAAY,CAAC,EAAE;;;;YAAE,CAAC,CAAC;;sBACf,KAAK,GAAG,IAAI,mBAAmB,CACnC,EAAE,EACF,KAAK,EACL,MAAM,EACN,CAAC,CAAC,KAAK,EACP,CAAC,CAAC,MAAM,CACT;gBACD,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAChB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;aACnB,EAAC,CAAC;YACH,QAAQ,CAAC,IAAI,mBAAmB,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;SACrE;KACF;;;YA7BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;4CAEc,MAAM,SAAC,WAAW;;;;;;;;ACTjC,MAQa,uBAAuB;;;;;;IAQlC,YAAmB,EAAc,EAAU,OAA8B,EAA+B,UAAe;QAApG,OAAE,GAAF,EAAE,CAAY;QAAU,YAAO,GAAP,OAAO,CAAuB;QAA+B,eAAU,GAAV,UAAU,CAAK;QAF9G,WAAM,GAAG,IAAI,YAAY,EAAuB,CAAC;KAGzD;;;;IAED,eAAe;QACb,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa;;;;QAAE,KAAK;YACjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB,EAAC,CAAC;KACJ;;;;;;IAEO,QAAQ,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;;;YA3BF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE,gBAAgB;aAC3B;;;;YAPiC,UAAU;YACpC,qBAAqB;4CAeiD,MAAM,SAAC,WAAW;;;qBAH7F,MAAM;;;;;;;ACbT,MAQa,oBAAoB;;;YALhC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;gBACvC,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC,uBAAuB,CAAC;aACnC;;;;;;;;;;;;;;;"}
